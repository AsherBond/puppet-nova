[DEFAULT]
# Show more verbose log output (sets INFO log level output)
verbose = <%= verbose %>

# Show debugging output in logs (sets DEBUG log level output)
debug = False

[app:glance-api]
paste.app_factory = glance.server:app_factory

# Which backend store should Glance use by default is not specified
# in a request to add a new image to Glance? Default: 'file'
# Available choices are 'file', 'swift', and 's3'
default_store = <%= default_store %>

# Address to bind the API server
bind_host = 0.0.0.0

# Port the bind the API server to
bind_port = <%= bind_port %>

# Address to find the registry server
registry_host = 0.0.0.0

# Port the registry server is listening on
registry_port = <%= registry_port %>

# ============ Filesystem Store Options ========================

# Directory that the Filesystem backend store
# writes image data to
filesystem_store_datadir=/var/lib/glance/images/

# ============ Swift Store Options =============================

# Address where the Swift authentication service lives
# The auth address should be in the form:
#   <DOMAIN>[:<PORT>]/<VERSION>/<ACCOUNT>
swift_store_auth_address = <%= auth_domain %>:8080/v1.0/glance-account

# User to authenticate against the Swift authentication service
swift_store_user = <%= swift_store_user %>

# Auth key for the user authenticating against the
# Swift authentication service
swift_store_key = <%= swift_store_key %>

# Container within the account that the account should use
# for storing images in Swift
swift_store_container = glance

# Do we create the container if it does not exist?
swift_store_create_container_on_put = False

[app:glance-registry]
paste.app_factory = glance.registry.server:app_factory

# Address to bind the registry server
bind_host = 0.0.0.0

# Port the bind the registry server to
bind_port = <%= registry_port %>

# SQLAlchemy connection string for the reference implementation
# registry server. Any valid SQLAlchemy connection string is fine.
# See: http://www.sqlalchemy.org/docs/05/reference/sqlalchemy/connections.html#sqlalchemy.create_engine
sql_connection=mysql://<%= db_user %>:<%= db_password %>@<%= glance_ip %>/glance

# Period in seconds after which SQLAlchemy should reestablish its connection
# to the database.
#
# MySQL uses a default `wait_timeout` of 8 hours, after which it will drop
# idle connections. This can result in 'MySQL Gone Away' exceptions. If you# notice this, you can lower this value to ensure that SQLAlchemy reconnects
# before MySQL can drop the connection.
sql_idle_timeout = 3600
